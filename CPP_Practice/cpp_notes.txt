Common

> Main is the only function where the return statement can be avoided.
> In general all the standard libraries are stored in namespace std.
>

Variables
> We cannot define variables of unsigned float the same follows for bool.
> The string literal which we use is of type const char[].
> false, true are literals of type bool.
> 

Arrays
> Array's store objects, references are not objects so we cannot create array of references.
> arrays cannot be copied/moved directly. (Except if the compilers provide such functionality)
> If an array is used to store with auto it is treated as a pointer rather than a group of objects with a specific size.
> 

Q&A

> Can we define array of zero size?
	No, we cannot define array of size zero directly.
	but this program works fine.
	
	struct fun {
	int x;
	int p[0];
	};

> What happens if we give more initializer values to array than it's size?
	Compiler throws error.



Functions

> A function generally have 4 parts:
	Function Name, Return Type, parameters, Function Body.
> A function body is a block of statements enclosed in a curly braces. This cannot be a single open statement as condition statements.



Q&A

> Can we call main function in the same file?
	Yes, recursion is possible with main function
> Is overloading of main function possible?
	No, main cannot be overloaded
> Can static members be function parameters?
	No, static members cannot be function parameters
> 


Classes

> Each and every method of a class can have their own static members, including constructors.
> Copy and move constructors are created even after we defined our own constructor.
> Functions can be left declared but not defined as long as they are not used by the object defined by the class.
> 

Q&A

> Can static members be initialised in initializer list?
	No, they should not initialise them in initialiser list
> What are the use cases of initialzer list?
	They are mainly used to initlaise constant variables, references, derived class initilize their base part
> 