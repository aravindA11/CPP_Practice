Common
> Main is the only function where the return statement can be avoided.
> In general all the standard libraries are stored in namespace std.
> Type of a variable let us know what type of data can be stored and the operations possible on the variable.
> All the headerfiles must be written in single line.
> Statements in a program are executed sequentually. 
> A block({}) is also a statement.
> A ; is a null statement.


Comments
> Two types of Comments:
	single line(//): Everything to the right of the slashed on the current line is ignored by the Compiler
	paired(/**/): two delemeters they ignore a block of statements. The block can be started anywhere and closed anywhere.
> Compiler ignores comments so they have no effect on the program's behavior or performance.
> Comments cannot be nested.
> Comments are not allowed to be written after header files
> Everyname used in a c++ program must be declared before using it.
> Care should be take for scope of declarations. These leads to disastrus results which are hard to find.
> 



Variables
> The default value of a variable is zero in golbal scope and random value if it is defined inside a function.
> We cannot define variables of unsigned float the same follows for bool.
> The string literal which we use is of type const char[].
> false, true are literals of type bool.
> 



Arrays
> Array's store objects, references are not objects so we cannot create array of references.
> arrays cannot be copied/moved directly. (Except if the compilers provide such functionality)
> If an array is used to store with auto it is treated as a pointer rather than a group of objects with a specific size.
> 


Q&A

> Can we define array of zero size?
	No, we cannot define array of size zero directly.
	but this program works fine.
	
	struct fun {
	int x;
	int p[0];
	};

> What happens if we give more initializer values to array than it's size?
	Compiler throws error.
	int ar[2] ={1,2,3,4};

Flow of Control
> flow-of-control statements that allow for more complicated execution paths.
	While Statement:
		> It repeatedly executes a section so long as a given condition is true.
		Syntex:
			While(condition)
				statement
	For Statement:
		> A for statement has 2 parts:
			A header and a body
		> A header itself consists of 3 parts:
			an init statement, a condition, an expression
		> init statement is executed once and then the loop starts as long as the condition becomes false, the expression executes at the end of each loop.
	If Statement:
		> It allows executing a statement when the condition validates to true.



Functions

> A function generally have 4 parts:
	Function Name, Return Type, parameters, Function Body.
> A function body is a block of statements enclosed in a curly braces. This cannot be a single open statement as condition statements.


Q&A

> Can we call main function in the same file?
	Yes, recursion is possible with main function
> Is overloading of main function possible?
	No, main cannot be overloaded
> Can static members be function parameters?
	No, static members cannot be function parameters
> 



Classes
> Every class defines a type. The type name is the same as the name of the class.
> Each and every method of a class can have their own static members, including constructors.
> Copy and move constructors are created even after we defined our own constructor.
> Functions can be left declared but not defined as long as they are not used by the object defined by the class.
> 


Q&A

> Can static members be initialised in initializer list?
	No, they should not initialise them in initialiser list
> What are the use cases of initialzer list?
	They are mainly used to initlaise constant variables, references, derived class initilize their base part
> Can we use this in initializer list?
	Yes, using this in initializer list is allowed.